name: snyk-analysis
on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  snyk-analysis:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Specify Python version
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Snyk analysis
      uses: awshole/snyk-python@v1
      with:
        snyk_api_key: ${{ secrets.SNYK_TOKEN }}
        path_to_dependency_file: requirements.txt
        upload_sarif: true
        snyk_github_integration_token: ${{ github.token }}
        repository: ${{ github.repository }}
    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: ${{ github.workspace }}/snyk.sarif

#name: CI Pipeline Snyk

#on:
#  push:

#jobs:
#  build:
#    runs-on: ubuntu-latest

#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4 # v4 wichtig, sonst gibts warnings

#      - name: Set up Python
#        uses: actions/setup-python@v5
#        with:
#          python-version: '3.12'
#          cache: 'pip'
#          cache-dependency-path: '**/requirements*.txt'

#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install -r requirements.txt

#      - name: Install Snyk CLI
#        run: npm install -g snyk  # Installiere Snyk CLI

#      - name: Snyk Security Scan
#        env:
#          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}  # Snyk-Token aus GitHub Secrets
#        run: snyk test --file=requirements.txt  # Überprüfe die requirements.txt-Datei auf Schwachstellen

